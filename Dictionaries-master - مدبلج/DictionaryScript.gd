extends Node

# إنشاء قاموس فارغ
var قاموس_فارغ = {}

#إنشاء قاموس، مسموح بـ عدد صحيح ووتر للمفاتيح
var قاموس = {
	1.0 :"أهلاً",
	"مفتاح": "عالم"
}

func _ready():
	
	# إضافة مفتاح إلى القاموس
	قاموس_فارغ["مفتاح"] = "قيمة" # توفر الأقواس المربعة تحكمًا أكبر في الاسم
	قاموس_فارغ[4] = [1,2,3,4] # يمكنك استخدام القيم الحرفية مثل الأعداد الصحيحة والأعداد العائمة والأعداد المنطقية
	قاموس_فارغ.بعض_المفاتيح = "بعض القيم" # تدوين النقاط هو طريقة سهلة إذا كنت تريد استخدام سلاسل المفاتيح بشكل افتراضي
	
	# الحصول على قيمة من قاموس موجود
	var الحصول_على_القيمة = قاموس_فارغ[4] # إرجاع مجموعة [1,2,3,4]
	var الحصول_على_قيمة_أخرى = قاموس_فارغ["مفتاح"] # إرجاع السلسلة "القيمة"
	
	# اطبع لمعرفة قيم القاموس
	print("الحصول على القيمة: ", الحصول_على_القيمة)
	print("الحصول على قيمة أخرى: ", الحصول_على_قيمة_أخرى)
	
	
	# إنشاء قواميس لمثال القاموس المتداخل
	var القاموس_1 = {"مفتاح": [1, 2, 3, 4]} # يقوم بتعيين مصفوفة لسلسلة مفاتيح تسمى "مفتاح".
	var القاموس_2 = {"مفتاح": [1, 2, 3, 4]} # يقوم بتعيين مصفوفة لسلسلة مفاتيح تسمى "مفتاح".
	var القاموس_3 = {"مفتاح": القاموس_2} # يقوم بتعيين قاموس لسلسلة مفاتيح تسمى "مفتاح".
	# القاموس_3["مفتاح"]["مفتاح"] # هذه هي كيفية الوصول إلى القاموس المتداخل
	
	# انظر ما بداخل قاموسنا المتداخل
	print(القاموس_3["مفتاح"]["مفتاح"])
	
	# مقارنة القواميس من خلال التجزئات
	# قاموس التجزئة
	print(القاموس_1 == القاموس_2) # خطأ شنيع
	print(القاموس_1.hash() == القاموس_2.hash()) # حقيقي
	
	# مسح القاموس بأكمله
	القاموس_1.clear()
	
	#إزالة مفتاح معين من القاموس
	القاموس_3.erase("مفتاح")
